apiVersion: v1
kind: List
items:
# Namespace
- apiVersion: v1
  kind: Namespace
  metadata:
    name: live-demo

# MySQL
- apiVersion: v1
  kind: Secret
  metadata:
    name: mysql-secret
    namespace: live-demo
  data:
    rootPassword: cm9vdA== # root
    password: d29yZFBSRVNT # wordPRESS
  type: Opaque
  immutable: true

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: mysql-config
    namespace: live-demo
    labels:
      app: mysql
  data:
    username: wordpress-dsa
    database: wordpress

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mysql-data
    namespace: live-demo
  spec:
    resources:
      requests:
        storage: 2Gi
    volumeMode: Filesystem
    accessModes:
    - ReadWriteMany

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: mysql
    labels:
      name: mysql
    namespace: live-demo
  spec:
    selector:
      matchLabels:
        name: mysql
    template:
      metadata:
        labels:
          name: mysql
      spec:
        containers:
        - image: docker.io/library/mysql:8.0-debian
          name: my-sql
          resources:
            requests:
              cpu: "20m"
              memory: "55M"
          env:
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: mysql-config
                key: database 
          - name: MYSQL_USER
            valueFrom:
              configMapKeyRef:
                name: mysql-config
                key: username
          - name: MYSQL_ROOT_PASSWORD_FILE
            value: /run/secrets/rootCredential
          - name: MYSQL_PASSWORD_FILE
            value: /run/secrets/userCredential
          ports: 
          - containerPort: 3306
            name: mysql
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-data
          - mountPath: /run/secrets
            name: credential-db
        volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
        - name: credential-db
          secret: 
            secretName: mysql-secret
            items:
            - key: rootPassword
              path: rootCredential
              mode: 256
            - key: password
              path: userCredential
              mode: 256
        restartPolicy: Always

- kind: Service
  apiVersion: v1
  metadata:
    namespace: live-demo
    name: mysql-service
  spec:
    selector:
      app: mysql
    type: ClusterIP
    ports:
    - name: mysql
      port: 3306
      targetPort: 3306


# Wordpress
- apiVersion: v1
  kind: Secret
  metadata:
    name: wordpress-secret
    namespace: live-demo
  data:
    password: d29yZFBSRVNT # wordPRESS
  type: Opaque

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: wordpress-config
    namespace: live-demo
    labels:
      app: wordpress
  data:
    host-db: mysql-service
    name-db: wordpress
    username-db: wordpress-dsa

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: wordpress-www
    namespace: live-demo
  spec:
    resources:
      requests:
        storage: 2Gi
    volumeMode: Filesystem
    accessModes:
    - ReadWriteMany

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: wordpress
    namespace: live-demo
    labels:
      name: wordpress
  spec:
    selector:
      matchLabels:
        name: wordpress
    template:
      metadata:
        labels:
          name: wordpress
      spec:
        containers:
        - image: docker.io/library/wordpress:php8.1-apache
          name: wordpress
          resources:
            requests:
              cpu: "20m"
              memory: "55Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          env:
          - name: WORDPRESS_DB_HOST
            valueFrom:
              configMapKeyRef:
                name: wordpress-config
                key: host-db
          - name: WORDPRESS_DB_USER
            valueFrom:
              configMapKeyRef:
                name: wordpress-config
                key: username-db
          - name: WORDPRESS_DB_NAME
            valueFrom:
              configMapKeyRef:
                name: wordpress-config
                key: name-db
          - name: WORDPRESS_DB_PASSWORD_FILE
            value: /run/secrets/userCredential
          ports:
          - containerPort: 80
            name: http
          volumeMounts:
          - mountPath: /var/www/html
            name: data
          - mountPath: /run/secrets
            name: credential-db
        volumes:
          - name: data
            persistentVolumeClaim:
              claimName: wordpress-www
          - name: credential-db
            secret: 
              secretName: wordpress-secret
              items:
              - key: password
                path: userCredential
                mode: 256
        restartPolicy: Always

- apiVersion: v1
  kind: Service
  metadata:
    name:  wordpress-svc
    namespace: live-demo
  spec:
    selector:
      name: wordpress
    type:  ClusterIP
    ports:
    - name:  http
      port:  80
      targetPort:  80

- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: wordpress-ingress
    namespace: live-demo
    labels:
      name: wordpress-ingress
  spec:
    rules:
    - host: wordpress.demo.jesaya
      http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: wordpress
              port: 
                number: 80
